(()=>{"use strict";var t={n:e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},d:(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const e=window.wp.domReady;var n=t.n(e);const o=window.wp.i18n;window.wp.blocks,window.wp.data;class r{constructor(){this.features=null,this.initialized=!1}async init(){if("undefined"==typeof wp||!wp.features)return console.error("Feature API not available"),!1;this.features=wp.features,this.initialized=!0;const t=this.features.get().map((t=>({id:t.id,name:t.name,type:t.type,categories:t.categories})));return console.log("DGW Feature API initialized. Available features:",t),window.dgwFeatures={insertBanner:this.insertBanner.bind(this),analyzeContent:this.analyzeContent.bind(this),insertBannerIntoCurrentPost:this.insertBannerIntoCurrentPost.bind(this),insertBannerIntoCurrentPage:this.insertBannerIntoCurrentPage.bind(this),getContentSuggestions:this.getContentSuggestions.bind(this),listFeatures:this.listFeatures.bind(this),createPageWithBanner:this.createPageWithBanner.bind(this),createPostWithBanner:this.createPostWithBanner.bind(this)},!0}async insertBanner(t={}){if(!this.initialized)throw new Error("Feature API not initialized");const e=this.features.find("dgwltd-plugin/insert-banner");if(!e)throw new Error("Banner insertion feature not found");const n={title:"New Banner",position:"end",alignment:"full",block_style:"default",overlay_opacity:70,...t};try{console.log("Inserting banner with config:",n);const t=await e.run(n);return t.success&&(console.log("Banner inserted successfully:",t),window.wp&&wp.data&&wp.data.dispatch&&wp.data.dispatch("core/notices").createNotice("success",(0,o.__)("Banner block inserted successfully!","dgwltd-plugin"),{isDismissible:!0,actions:[{label:(0,o.__)("Edit Post","dgwltd-plugin"),url:t.edit_url},{label:(0,o.__)("View Post","dgwltd-plugin"),url:t.view_url}]})),t}catch(t){throw console.error("Error inserting banner:",t),t}}async analyzeContent(t){if(!this.initialized)throw new Error("Feature API not initialized");const e=this.features.find("dgwltd-plugin/analyze-content");if(!e)throw new Error("Content analysis feature not found");try{const n=await e.run({post_id:t});return console.log("Content analysis:",n),n}catch(t){throw console.error("Error analyzing content:",t),t}}async insertBannerIntoCurrentPost(t={}){return await this.insertBannerIntoCurrentContent({...t,post_type:"post"})}async insertBannerIntoCurrentPage(t={}){return await this.insertBannerIntoCurrentContent({...t,post_type:"page"})}async insertBannerIntoCurrentContent(t={}){let e=null,n=null;if(window.wp&&wp.data&&wp.data.select){const t=wp.data.select("core/editor")?.getCurrentPost();t&&t.id&&(e=t.id,n=t.type)}if(e||(e=new URLSearchParams(window.location.search).get("post")),!e){const e=t.post_type||"post";console.warn(`Could not determine current content ID, creating new ${e}`)}const o={...t,post_id:e?parseInt(e):void 0,post_type:t.post_type||n||"post"};return await this.insertBanner(o)}async getContentSuggestions(t){try{const e=await this.analyzeContent(t);if(e.suggestions&&e.suggestions.length>0){const t="page"===e.post_type?"page":"post";console.log(`Found ${e.suggestions.length} insertion suggestions for ${t}:`),e.suggestions.forEach(((t,e)=>{console.log(`${e+1}. ${t.reason} (${t.position})`)}))}return e.suggestions||[]}catch(t){return console.error("Error getting suggestions:",t),[]}}listFeatures(){if(!this.initialized)return console.error("Feature API not initialized"),[];const t=this.features.get().filter((t=>t.categories&&t.categories.includes("dgwltd")));return console.log("DGW.ltd Features:"),t.forEach((t=>{console.log(`- ${t.name} (${t.id})`),console.log(`  Type: ${t.type}`),console.log(`  Description: ${t.description}`),console.log(`  Categories: ${t.categories.join(", ")}`),console.log("")})),t}async quickBanner(t,e="",n={}){const o={title:t,content:e,position:"end",...n};return await this.insertBannerIntoCurrentPost(o)}async insertBannerWithImage(t,e,n,o={}){const r={title:t,content:e,background_image_url:n,overlay_color:"#000000",overlay_opacity:50,...o};return await this.insertBannerIntoCurrentContent(r)}async createPageWithBanner(t,e="",n={}){const o={title:t,content:e,post_type:"page",position:"beginning",...n};return await this.insertBanner(o)}async createPostWithBanner(t,e="",n={}){const o={title:t,content:e,post_type:"post",position:"beginning",...n};return await this.insertBanner(o)}}n()((async()=>{const t=new r;await t.init()&&(console.log("DGW Feature API ready! Try these in the console:"),console.log("- dgwFeatures.listFeatures()"),console.log('- dgwFeatures.insertBanner({ title: "My Banner", content: "Hello world!", post_type: "page" })'),console.log("- dgwFeatures.analyzeContent(123)"),console.log('- dgwFeatures.quickBanner("Quick Title", "Quick content")'),console.log('- dgwFeatures.createPageWithBanner("New Page", "Page content")'),console.log('- dgwFeatures.insertBannerIntoCurrentPage({ title: "Page Banner" })'),(window.location.hostname.includes("dev")||window.location.hostname.includes("localhost"))&&console.log("Development mode detected - Feature API ready for testing"))}))})();